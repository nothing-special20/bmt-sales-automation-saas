version: "3.8"

services:
  db:
    image: postgres
    # persist data beyond lifetime of container
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=bmt_sales_automation
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5433:5432
  redis:
    image: redis
    # persistent storage
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
  web:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile.web
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - redis
  celery:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile.web
    command: celery -A bmt_sales_automation worker -l INFO
    volumes:
      - .:/code
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - redis
  # nginx-proxy:
  #   container_name: nginx-proxy
  #   # build: nginx
  #   build:
  #     context: .
  #     dockerfile: nginx/Dockerfile
  #   restart: always
  #   ports:
  #     - 443:443
  #     - 80:80
  #   volumes:
  #     - ./static:/home/app/web/staticfiles
  #     - certs:${NGINX_CERTS_DIR}
  #     - html:/usr/share/nginx/html
  #     - vhost:/etc/nginx/vhost.d
  #     - /var/run/docker.sock:/tmp/docker.sock:ro
  #     - acme:/etc/acme.sh
  #   depends_on:
  #     - web
  # nginx-proxy-letsencrypt:
  #   # image: nginxproxy/acme-companion
  #   build:
  #     context: .
  #     dockerfile: letsencrypt-nginx/Dockerfile
  #   env_file:
  #     - .env.dev.proxy-companion
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - certs:${NGINX_CERTS_DIR}
  #     - html:/usr/share/nginx/html
  #     - vhost:/etc/nginx/vhost.d
  #     - acme:/etc/acme.sh
  #   depends_on:
  #     - nginx-proxy

volumes:
  postgres_data:
  redis_data:
